---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/bets":
    post:
      summary: Create a new bet
      tags:
      - Bets
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '201':
          description: Bet created successfully
        '422':
          description: Invalid parameters
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bet:
                  type: object
                  properties:
                    game_id:
                      type: integer
                    bet_type:
                      type: string
                      enum:
                      - winner
                      - spread
                      - over_under
                      example: winner
                    pick:
                      type: string
                      example: home
                    amount:
                      type: number
                      example: 50.0
                  required:
                  - game_id
                  - bet_type
                  - pick
                  - amount
              required:
              - bet
  "/api/v1/games/{game_id}/events":
    post:
      summary: Create a new Event
      tags:
      - Events
      security:
      - Bearer: []
      parameters:
      - name: Authorization
        in: header
        required: true
        description: Bearer token for authentication
        schema:
          type: string
      - name: game_id
        in: path
        required: true
        description: ID of the game
        schema:
          type: integer
      responses:
        '201':
          description: Event created successfully
        '422':
          description: Invalid event parameters
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                event:
                  type: object
                  properties:
                    event_type:
                      type: string
                      example: goal
                      description: Type of the event
                    team:
                      type: string
                      example: home
                      description: Team associated with the event (home/away)
                    player:
                      type: string
                      example: Player 1
                      description: Player associated with the event
                    minute:
                      type: integer
                      example: 10
                      description: Minute when the event occurred
                  required:
                  - event_type
                  - team
                  - player
                  - minute
  "/api/v1/events/{id}":
    patch:
      summary: Update an Event
      tags:
      - Events
      security:
      - Bearer: []
      parameters:
      - name: Authorization
        in: header
        required: true
        description: Bearer token for authentication
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ID of the event
        schema:
          type: integer
      responses:
        '200':
          description: Event updated successfully
        '422':
          description: Invalid event parameters
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                event:
                  type: object
                  properties:
                    minute:
                      type: integer
                      example: 15
                      description: Updated minute for the event
                  required:
                  - minute
  "/api/v1/games":
    post:
      summary: Create a new Game
      tags:
      - Games
      parameters:
      - name: Authorization
        in: header
        required: true
        description: Bearer token for authentication
        schema:
          type: string
      responses:
        '201':
          description: Game created with events successfully
        '422':
          description: Invalid game parameters
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                game:
                  type: object
                  properties:
                    home_team:
                      type: string
                      example: Team A
                      description: Home team name
                    away_team:
                      type: string
                      example: Team B
                      description: Away team name
                    home_score:
                      type: integer
                      example: 0
                      description: Home team score
                    away_score:
                      type: integer
                      example: 0
                      description: Away team score
                    time_elapsed:
                      type: integer
                      example: 0
                      description: Time elapsed in the game
                    status:
                      type: string
                      example: scheduled
                      description: Status of the game (e.g., scheduled, ongoing, completed)
                    events_attributes:
                      type: array
                      items:
                        type: object
                        properties:
                          event_type:
                            type: string
                            example: goal
                            description: Type of event (e.g., goal, foul)
                          team:
                            type: string
                            example: home
                            description: Team associated with the event
                          player:
                            type: string
                            example: Player 1
                            description: Player who made the event
                          minute:
                            type: integer
                            example: 10
                            description: Minute in which the event occurred
                        required:
                        - event_type
                        - team
                        - player
                        - minute
                  required:
                  - home_team
                  - away_team
                  - status
              required:
              - game
    get:
      summary: Get list of games
      tags:
      - Games
      responses:
        '200':
          description: List of games
  "/api/v1/games/{id}":
    get:
      summary: Show a game by ID
      tags:
      - Games
      parameters:
      - name: id
        in: path
        required: true
        description: Game ID
        schema:
          type: integer
      - name: Authorization
        in: header
        required: true
        description: Bearer token for authentication
        schema:
          type: string
      responses:
        '200':
          description: Game details and odds
  "/api/v1/sign_up":
    post:
      summary: Registers a new user
      tags:
      - Registrations
      parameters: []
      responses:
        '201':
          description: user created successfully
        '422':
          description: invalid parameters
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: test@example.com
                      description: Email address of the user
                    password:
                      type: string
                      example: password
                      description: Password for the user
                    username:
                      type: string
                      example: testuser
                      description: Username for the user
                    balance:
                      type: number
                      example: 100
                      description: Initial balance for the user
                  required:
                  - email
                  - password
                  - username
                  - balance
        required: true
  "/api/v1/sign_in":
    post:
      summary: Log in a user
      tags:
      - Sessions
      parameters: []
      responses:
        '201':
          description: user logged in successfully
        '401':
          description: invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: test@example.com
                      description: Email address of the user
                    password:
                      type: string
                      example: password
                      description: Password for the user
                  required:
                  - email
                  - password
        required: true
  "/api/v1/sign_out":
    delete:
      summary: Log out a user
      tags:
      - Sessions
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
          example: Bearer {token}
          description: Authorization token for the logged-in user
      responses:
        '200':
          description: user logged out successfully
  "/api/v1/users":
    get:
      summary: List users with pagination
      tags:
      - Users
      parameters:
      - name: page
        in: query
        required: false
        description: Page number for pagination
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: Number of users per page
        schema:
          type: integer
      responses:
        '200':
          description: default number of users when per_page is not specified
  "/api/v1/users/update":
    put:
      summary: Update user details
      tags:
      - Users
      parameters:
      - name: Authorization
        in: header
        required: true
        description: Bearer token for authentication
        schema:
          type: string
      responses:
        '200':
          description: user updated successfully
        '401':
          description: unauthorized access
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    username:
                      type: string
                      example: UpdatedName
                      description: New username for the user
                    balance:
                      type: string
                      example: '1000.5'
                      description: Updated balance for the user
                  required:
                  - username
                  - balance
        required: true
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
